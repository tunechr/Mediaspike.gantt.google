
@{
    ViewBag.Title = "Timeline";
}


<link rel="stylesheet" href="http://kendo.cdn.telerik.com/2016.2.607/styles/kendo.common.min.css" />
<link rel="stylesheet" href="http://kendo.cdn.telerik.com/2016.2.607/styles/kendo.rtl.min.css" />
<link rel="stylesheet" href="//kendo.cdn.telerik.com/2016.2.607/styles/kendo.common-material.min.css" />
<link rel="stylesheet" href="//kendo.cdn.telerik.com/2016.2.607/styles/kendo.material.min.css" />
<link rel="stylesheet" href="http://kendo.cdn.telerik.com/2016.2.607/styles/kendo.mobile.all.min.css" />

<script src="//kendo.cdn.telerik.com/2016.2.607/js/jszip.min.js"></script>
<script src="//kendo.cdn.telerik.com/2016.2.607/js/kendo.all.min.js"></script>

<script>
    // Import DejaVu Sans font for embedding

    // NOTE: Only required if the Kendo UI stylesheets are loaded
    // from a different origin, e.g. cdn.kendostatic.com
    kendo.pdf.defineFont({
        "DejaVu Sans"             : "//kendo.cdn.telerik.com/2014.3.1314/styles/fonts/DejaVu/DejaVuSans.ttf",
        "DejaVu Sans|Bold"        : "//kendo.cdn.telerik.com/2014.3.1314/styles/fonts/DejaVu/DejaVuSans-Bold.ttf",
        "DejaVu Sans|Bold|Italic" : "//kendo.cdn.telerik.com/2014.3.1314/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf",
        "DejaVu Sans|Italic"      : "//kendo.cdn.telerik.com/2014.3.1314/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf"
    });
</script>

<!-- Load Pako ZLIB library to enable PDF compression -->
<script src="//kendo.cdn.telerik.com/2016.2.607/js/pako_deflate.min.js"></script>

<h2>Timeline</h2>

<div id="example">
    <div id="gantt"></div>

    <script>
            $(document).ready(function() {
                var serviceRoot = "http://localhost:5902/";
                var tasksDataSource = new kendo.data.GanttDataSource({
                    transport: {
                        read: {
                            url: serviceRoot + "/Gantt1/all",
                            dataType: "json"
                        },
                        update: {
                            url: serviceRoot + "/Gantt1/Update",
                            dataType: "json"
                        },
                        destroy: {
                            url: serviceRoot + "/Gantt1/Destroy",
                            dataType: "json"
                        },
                        create: {
                            url: serviceRoot + "/Gantt1/Create",
                            dataType: "json"
                        },
                        parameterMap: function(options, operation) {
                            if (operation !== "read") {
                                return { models: kendo.stringify(options.models || [options]) };
                            }
                        }
                    },
                    schema: {
                        model: {
                            id: "id",
                            fields: {
                                id: { from: "ID", type: "number" },
                                orderId: { from: "OrderID", type: "number", validation: { required: true } },
                                parentId: { from: "ParentID", type: "number", defaultValue: null, validation: { required: true } },
                                start: { from: "Start", type: "date" },
                                end: { from: "End", type: "date" },
                                title: { from: "Title", defaultValue: "", type: "string" },
                                percentComplete: { from: "PercentComplete", type: "number" },
                                summary: { from: "Summary", type: "boolean" },
                                expanded: { from: "Expanded", type: "boolean", defaultValue: true }
                            }
                        }
                    }
                });

                var dependenciesDataSource = new kendo.data.GanttDependencyDataSource({
                    transport: {
                        read: {
                            url: serviceRoot + "/GanttDependencies/All",
                            dataType: "json"
                        },
                        update: {
                            url: serviceRoot + "/GanttDependencies/Update",
                            dataType: "jsonp"
                        },
                        destroy: {
                            url: serviceRoot + "/GanttDependencies/Destroy",
                            dataType: "jsonp"
                        },
                        create: {
                            url: serviceRoot + "/GanttDependencies/Create",
                            dataType: "jsonp"
                        },
                        parameterMap: function(options, operation) {
                            if (operation !== "read") {
                                return { models: kendo.stringify(options.models || [options]) };
                            }
                        }
                    },
                    schema: {
                        model: {
                            id: "id",
                            fields: {
                                id: { from: "ID", type: "number" },
                                predecessorId: { from: "PredecessorID", type: "number" },
                                successorId: { from: "SuccessorID", type: "number" },
                                type: { from: "Type", type: "number" }
                            }
                        }
                    }
                });

                //Customer Q view
                kendo.ui.GanttCustomView = kendo.ui.GanttView.extend({
                    name: "custom",

                    options: {
                        yearHeaderTemplate: kendo.template("#=kendo.toString(start, 'yyyy')#"),
                        quarterHeaderTemplate: kendo.template("# return ['Q1', 'Q2', 'Q3', 'Q4'][start.getMonth() / 3] #"),
                        monthHeaderTemplate: kendo.template("#=kendo.toString(start, 'MMM')#")
                    },

                    range: function (range) {
                        this.start = new Date("01/01/2016");
                        this.end = new Date("01/01/2017");
                    },

                    _generateSlots: function (incrementCallback, span) {
                        var slots = [];
                        var slotStart = new Date(this.start);
                        var slotEnd;

                        while (slotStart < this.end) {
                            slotEnd = new Date(slotStart);
                            incrementCallback(slotEnd);

                            slots.push({ start: slotStart, end: slotEnd, span: span });

                            slotStart = slotEnd;
                        }

                        return slots;
                    },

                    _createSlots: function () {
                        var slots = [];

                        slots.push(this._generateSlots(function (date) { date.setFullYear(date.getFullYear() + 1); }, 12));
                        slots.push(this._generateSlots(function (date) { date.setMonth(date.getMonth() + 3); }, 3));
                        slots.push(this._generateSlots(function (date) { date.setMonth(date.getMonth() + 1); }, 1));

                        return slots;
                    },

                    _layout: function () {
                        var rows = [];
                        var options = this.options;

                        rows.push(this._slotHeaders(this._slots[0], kendo.template(options.yearHeaderTemplate)));
                        rows.push(this._slotHeaders(this._slots[1], kendo.template(options.quarterHeaderTemplate)));
                        rows.push(this._slotHeaders(this._slots[2], kendo.template(options.monthHeaderTemplate)));

                        return rows;
                    }
                });


                var gantt = $("#gantt").kendoGantt({
                    dataSource: tasksDataSource,
                    dependencies: dependenciesDataSource,
                    views: [
                        "day",
                        { type: "week", selected: false },
                        { type: "month", selected: true },
                        { type: "kendo.ui.GanttCustomView", title: "Quaterly", selected: true }
                    ],
                    columns: [
                        { field: "id", title: "ID", width: 50 },
                        { field: "title", title: "Title", editable: true, sortable: true, width:150 },
                        { field: "start", title: "Start Time", format: "{0:MM/dd/yyyy}", width: 110, editable: true, sortable: true },
                        { field: "end", title: "End Time", format: "{0:MM/dd/yyyy}", width: 110, editable: true, sortable: true }
                    ],

                    toolbar: ["append", "pdf"],
                    pdf: {
                        fileName: "Kendo UI Gantt Export.pdf",
                        proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                    },

                    height: 700,
                    listWidth: 550,
                    showWorkHours: false,
                    showWorkDays: false,

                    resizable: true,

                    snap: false
                }).data("kendoGantt");

                $(document).bind("kendo:skinChange", function() {
                    gantt.refresh();
                });
            });
    </script>
</div>